{"version":3,"sources":["Service.js","Home.js","SingleCandidate.js","Status.js","Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["fetchCandidates","a","axios","get","candidateList","data","console","error","value","Candidates","props","navigate","useNavigate","useState","candidates","setCandidates","filteredCandidates","setfilteredCandidates","fetchData","ans","localStorageData","localStorage","getItem","map","item","status","setItem","JSON","stringify","useEffect","log","filtered","filter","name","navbar","toLowerCase","includes","length","className","index","onClick","id","state","showCandidate","style","height","width","borderRadius","src","Image","alt","SingleCandidate","candidateStatus","setCandidateStatus","candidate","setCandidate","useLocation","one","parse","class","marginRight","replace","marginTop","window","location","pathname","split","Navbar","onChange","e","onSearchChange","target","type","placeholder","marginLeft","href","App","setNav","module","val","exact","path","element","Home","Status","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.486129c1.chunk.js","sourcesContent":["import axios from \"axios\";\nlet url =\n  \"https://s3-ap-southeast-1.amazonaws.com/he-public-data/users49b8675.json\";\n\nexport const fetchCandidates = async () => {\n  try {\n    const candidateList = await axios.get(url);\n    return candidateList.data;\n  } catch (error) {\n    console.error(\"Error Fetching Products\", error);\n    return null;\n  }\n};\n","import React, { useEffect, useState } from \"react\";\nimport { fetchCandidates } from \"./Service\";\nimport { useNavigate } from \"react-router-dom\";\nlet value = [];\nconst Candidates = (props) => {\n  const navigate = useNavigate();\n  let [candidates, setCandidates] = useState([]);\n  let [filteredCandidates, setfilteredCandidates] = useState([]);\n\n  const fetchData = async () => {\n    let ans = await fetchCandidates();\n    let localStorageData = localStorage.getItem(\"candidateStatus\");\n    ans.map((item) => (item.status = \"all\"));\n    setCandidates(ans);\n    if (!localStorageData) {\n      localStorage.setItem(\"candidateStatus\", JSON.stringify(ans));\n    }\n  };\n  useEffect(() => {\n    fetchData();\n  }, []);\n  console.log(\":status\", props);\n  useEffect(() => {\n    let filtered = candidates.filter((item) => {\n      if (\n        item.name &&\n        props.navbar &&\n        item.name.toLowerCase().includes(props.navbar.toLowerCase())\n      )\n        return item;\n    });\n    setfilteredCandidates(filtered);\n    value =\n      props.navbar && props.navbar.length ? filteredCandidates : candidates;\n  }, [props.navbar]);\n  const showCandidate = (item) => {\n    navigate(`/candidate/${item.id}`, { state: { item: item } });\n  };\n  if (candidates == null) {\n    return <div>Loading...</div>;\n  }\n  value = props.navbar && props.navbar.length ? filteredCandidates : candidates;\n  return (\n    <div className=\"candidates\">\n      <div className=\"grid-container\">\n        {value.map((item, index) => {\n          return (\n            <div className=\"grid-item\" key={item.id}>\n              <div className=\"card\" onClick={() => showCandidate(item)}>\n                <img\n                  className=\"img\"\n                  style={{ height: \"30%\", width: \"40%\", borderRadius: 10 }}\n                  src={item.Image}\n                  alt=\"candidate\"\n                />\n                <div className=\"container\">\n                  <h4>\n                    <b> {item.name}</b>\n                  </h4>\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default Candidates;\n","import React, { useState, useEffect } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nconst SingleCandidate = () => {\n  let [candidateStatus, setCandidateStatus] = useState([]);\n  let [candidate, setCandidate] = useState({});\n  const { state } = useLocation();\n  const navigate = useNavigate();\n  useEffect(() => {\n    let data = localStorage.getItem(\"candidateStatus\");\n    let one = JSON.parse(data).filter((item) => item.id === state.item.id);\n    setCandidate(one[0]);\n    setCandidateStatus(JSON.parse(data));\n  }, []);\n\n  return (\n    <div>\n      <div className=\"single-candidate\">\n        <div class=\"product-card\">\n          <img\n            src={state && state.item && state.item.Image}\n            alt=\"Avatar\"\n            className=\"single-can-img \"\n          />\n\n          <p className=\"btns\">\n            {candidate && candidate.status === \"all\" ? (\n              <>\n                <button\n                  style={{ marginRight: 5 }}\n                  className=\"btn2\"\n                  onClick={() => {\n                    candidateStatus.map((item) => {\n                      if (item.id == state.item.id) {\n                        item.status = \"shortlisted\";\n                      }\n                    });\n                    setCandidateStatus(candidateStatus);\n                    setCandidate(candidateStatus);\n                    localStorage.setItem(\n                      \"candidateStatus\",\n                      JSON.stringify(candidateStatus)\n                    );\n                    navigate(\"../\", { replace: true });\n                  }}\n                >\n                  Shortlist\n                </button>\n                {\"\"}\n                <button\n                  className=\"btn1\"\n                  onClick={() => {\n                    candidateStatus.map((item) => {\n                      if (item.id == state.item.id) {\n                        item.status = \"rejected\";\n                      }\n                    });\n                    setCandidateStatus(candidateStatus);\n                    setCandidate(candidateStatus);\n                    localStorage.setItem(\n                      \"candidateStatus\",\n                      JSON.stringify(candidateStatus)\n                    );\n                    navigate(\"../\", { replace: true });\n                  }}\n                >\n                  Reject\n                </button>\n              </>\n            ) : (\n              <button\n                className={candidate.status == \"shortlisted\" ? \"btn2\" : \"btn1\"}\n              >\n                {candidate.status}\n              </button>\n            )}\n          </p>\n        </div>\n\n        <div className=\"card-data\" style={{ marginTop: 20 }}>\n          <h1>\n            <i>Details of Candidate</i>\n          </h1>\n          <h2>\n            <strong>ID</strong> : {state && state.item && state.item.id}\n          </h2>\n          <h2>Name : {state && state.item && state.item.name}</h2>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SingleCandidate;\n","import React, { useEffect, useState } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nlet value = [];\nconst Candidates = (props) => {\n  const navigate = useNavigate();\n  let [candidates, setCandidates] = useState([]);\n  let [filteredCandidates, setfilteredCandidates] = useState([]);\n  const fetchData = async () => {\n    let localStorageData = localStorage.getItem(\"candidateStatus\");\n\n    if (localStorageData && JSON.parse(localStorageData)) {\n      let filtered = JSON.parse(localStorageData).filter(\n        (item) => item.status == window.location.pathname.split(\"/\")[1]\n      );\n      setCandidates(filtered);\n    }\n  };\n  useEffect(() => {\n    let filtered = candidates.filter((item) => {\n      if (\n        item.name &&\n        props.navbar &&\n        item.name.toLowerCase().includes(props.navbar.toLowerCase())\n      )\n        return item;\n    });\n    setfilteredCandidates(filtered);\n    value =\n      props.navbar && props.navbar.length ? filteredCandidates : candidates;\n  }, [props.navbar]);\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const showCandidate = (item) => {\n    navigate(`/candidate/${item.id}`, { state: { item: item } });\n  };\n  value = props.navbar && props.navbar.length ? filteredCandidates : candidates;\n  if (candidates == null) {\n    return <div>Loading...</div>;\n  }\n  return (\n    <div className=\"candidates\">\n      <div className=\"grid-container\">\n        {value.map((item, index) => {\n          return (\n            <div className=\"grid-item\" key={index}>\n              <div className=\"card\" onClick={() => showCandidate(item)}>\n                <img\n                  className=\"img\"\n                  src={item.Image}\n                  alt=\"Avatar\"\n                  style={{ height: \"30%\", width: \"40%\", borderRadius: 10 }}\n                />\n                <div className=\"container\">\n                  <h4>\n                    <b> {item.name}</b>\n                  </h4>\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default Candidates;\n","import React from \"react\";\n// import Candidates from \"./Home\";\n\nconst Navbar = (props) => {\n  return (\n    <nav>\n      <div className=\"brand\">\n        <h3>Candidate</h3>\n      </div>\n      <div className=\"navigation\">\n        <div className=\"search\">\n          <div className=\"search-content\">\n            <button className=\"search-button\">\n              <i class=\"fa fa-search\"></i>\n            </button>\n            <input\n              onChange={(e) => {\n                props.onSearchChange(e.target.value);\n              }}\n              value={props.navbar}\n              type=\"text\"\n              className=\"search-input\"\n              placeholder=\"Search here...\"\n            />\n          </div>\n        </div>\n        <ul className=\"menu\" style={{ marginLeft: -30 }}>\n          <li>\n            <a href=\"/\">Home</a>\n          </li>\n          <li>\n            <a href=\"/shortlisted\">Shortlist</a>\n          </li>\n          <li>\n            <a href=\"/rejected\">Rejected</a>\n          </li>\n        </ul>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import \"./App.css\";\nimport React, { useState } from \"react\";\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport Home from \"./Home\";\nimport Candidate from \"./SingleCandidate\";\nimport Status from \"./Status\";\nimport Navbar from \"./Navbar\";\nfunction App() {\n  const [navbar, setNav] = useState();\n  const onSearchChange = (val) => {\n    setNav(val);\n  };\n  return (\n    <div className=\"App\">\n      <Router>\n        <Navbar module=\"Home\" navbar={navbar} onSearchChange={onSearchChange} />\n        <Routes>\n          <Route exact path=\"/\" element={<Home navbar={navbar} />}></Route>\n\n          <Route\n            exact\n            path=\"/candidate/:candidateId\"\n            element={<Candidate navbar={navbar} />}\n          ></Route>\n          <Route\n            exact\n            path=\"/:candidateStatus\"\n            element={<Status navbar={navbar} />}\n          ></Route>\n        </Routes>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}